---
import Section from "@/components/templates/midudev/Section.astro";
import WorldMap from "@/icons/WorldMap.astro";
import { type Location } from "@/Schemas/locationSchema";
import { type Profile } from "@/Schemas/profileSchema";
import { type Basic } from "@/Schemas/basicSchema";
import Mail from "@/icons/Mail.astro";
import Phone from "@/icons/Phone.astro";
import X from "@/icons/X.astro";
import LinkedIn from "@/icons/LinkedIn.astro";
import GitHub from "@/icons/GitHub.astro";
import { type SocialIcon } from "@/env";

const { basic } = Astro.props;
const { profiles, location }: { profiles: Profile[]; location: Location } =
  basic;

const linkedInfo = profiles.find(({ network }) => network === "LinkedIn");
const linkedUrl = linkedInfo?.url;
const printInfo = [basic.email, basic.phone, linkedUrl]
  .filter(Boolean)
  .join(" • ");

const SOCIAL_ICONS: SocialIcon = {
  GitHub,
  LinkedIn,
  X,
};
---

<Section>
  <div class="container">
    <div class="info">
      <h1>{basic.name}</h1>
      <h2>{basic.label}</h2>
      <span>
        <WorldMap />
        {location.city}, {location.region}
      </span>
      <footer class="print">
        {printInfo}
      </footer>
      <footer class="no-print">
        {
          basic.email && (
            <a
              href={`mailto:${basic.email}`}
              title={`Enviar un correo electrónico a ${basic.name} al correo ${basic.email}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Mail />
            </a>
          )
        }
        {
          basic.phone && (
            <a
              href={`tel:${basic.phone}`}
              title={`Llamar por teléfono a ${basic.name} al número ${basic.phone}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Phone />
            </a>
          )
        }
        {
          profiles.map(({ network, url, username }) => {
            let Icon = SOCIAL_ICONS[network];
            if (!Icon) Icon = GitHub;

            console.log(Icon);
            return (
              <a
                href={url}
                title={`Visitar el perfil de ${basic.name} en ${network}`}
                target="_blank"
                rel="noopener noreferrer"
              >
                <Icon />
              </a>
            );
          })
        }
      </footer>
    </div>
    <figure>
      <img src={basic.image} alt={basic.name} />
    </figure>
  </div>
</Section>

<style>
  .container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    padding: 0px;
  }

  .info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-right: 32px;
  }

  h1 {
    font-size: 2rem;
  }

  h2 {
    color: #444;
    font-weight: 500;
    font-size: 1.1rem;
    text-wrap: balance;
  }

  img {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    width: 128px;
    border-radius: 16px;
  }

  span {
    color: #666;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.85rem;
    letter-spacing: -0.05rem;
  }

  footer {
    color: #555;
    font-size: 0.65rem;
    display: flex;
    gap: 4px;
    margin-top: 8px;
  }

  footer a {
    color: #777;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #eee;
    padding: 4px;
    height: 32px;
    width: 32px;
    border-radius: 6px;
    transition: all 0.3s ease;
  }

  footer a:hover {
    background: #eee;
    border: 1px solid #ddd;
  }

  @media (width <= 700px) {
    .container {
      flex-direction: column-reverse;
    }

    .info {
      justify-content: center;
      align-items: center;
      padding-right: 0;
      text-align: center;
    }

    figure {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    h2 {
      text-wrap: balance;
    }

    figure {
      margin: 0 auto;
    }
  }
</style>
