---
import GitHub from "@/icons/GitHub.astro";
import Section from "../Section.astro";
import FromToDate from "@/components/templates/midudev/FromToDate.astro";
import { type Project } from "@/Schemas/projectSchema";
import { getUserResumeSection } from "@/services/apiService";
import { type apiResultType } from "@/types/apiTypes";
import { type Option } from "@/components/ui/multiple-selector";

const { userId } = Astro.props;

const result: apiResultType<Project[]> = await getUserResumeSection<Project>(
  "project",
  Number(userId),
);

const { success, data: projects } = result;
---

<Section title="Proyectos">
  <ul>
    {
      projects &&
        projects.map(({ url, description, keywords, name, endDate }) => {
          console.log(keywords);
          const keywordsArray: Option[] = JSON.parse(keywords || "");
          const isActive = !endDate;
          return (
            <li>
              <article>
                <header>
                  <h3>
                    <a
                      href={url}
                      target="_blank"
                      title={`Ver el proyecto ${name}`}
                    >
                      {name}
                    </a>
                    {isActive && <span>•</span>}
                    {url && (
                      <a
                        class="github-code-link"
                        href={url}
                        target="_blank"
                        title={`Ver código fuente del proyecto ${name}`}
                      >
                        <GitHub />
                      </a>
                    )}
                  </h3>
                  <p>{description}</p>
                </header>
                <footer>
                  {keywordsArray &&
                    keywordsArray.length !== 0 &&
                    keywordsArray.map((keyword) => {
                      return <span>{keyword.value}</span>;
                    })}
                </footer>
              </article>
            </li>
          );
        })
    }
  </ul>
</Section>

<style>
  ul {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin-inline: -16px;
  }

  article {
    border-radius: 8px;
    border: 1px solid #f2f2f2;
    gap: 16px;
    display: flex;
    flex-direction: column;
    padding: 16px;
    height: 100%;
  }

  article header {
    flex: 1;
  }

  article h3 {
    margin-bottom: 4px;
  }

  article a {
    color: #111;
  }

  article a:hover {
    text-decoration: underline;
  }

  article p {
    font-size: 0.75rem;
    line-height: 1.2rem;
    margin-bottom: 4px;
  }

  article h3 span {
    color: rgb(0, 188, 47);
    animation-name: flicker;
    animation-duration: 3s;
    animation-timing-function: ease-in;
    animation-iteration-count: infinite;
  }

  footer {
    display: flex;
    flex-wrap: wrap;
    gap: 4px;
    font-size: 0.6rem;
  }

  footer span {
    border-radius: 6px;
    background: #eee;
    color: #444;
    font-size: 0.6rem;
    font-weight: 500;
    padding: 0.2rem 0.6rem;
  }

  .github-code-link {
    margin-left: 5px;
  }

  @keyframes flicker {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 0.25;
    }
    100% {
      opacity: 1;
    }
  }

  @media (width <= 700px) {
    ul {
      margin-inline: 0px;
    }

    article {
      border: none;
      box-shadow: 0 1px 1px #f2f2f2;
      padding: 0 0 16px 0;
    }
  }

  @media print {
    article h3 span {
      animation-name: none;
    }
  }
</style>
