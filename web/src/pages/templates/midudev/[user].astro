---
import { getUserResumeSection } from "../../../services/apiService";
import { type BasicResume } from "../../../Schemas/basicSchema";
import { type apiResultType } from "../../../types/apiTypes";
import "../../../styles/globals.css";
import WorldMap from "@/icons/WorldMap.astro";
import Section from "@/components/templates/midudev/Section.astro";
import Works from "@/components/templates/midudev/Works.astro";

const { title } = Astro.props;

const { user } = Astro.params;

const result: apiResultType<BasicResume[]> =
  await getUserResumeSection<BasicResume>("basic", Number(user));
if (!result || !result.data) {
  return Astro.redirect("/");
}
const { basic } = result.data[0];
const { profiles, location } = basic;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <title>{basic.name}</title>
    <meta name="description" content={basic.summary} />
    <!-- <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preload" as="image" href={image} />

    <meta property="og:url" content={url} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={summary} />
    <meta property="og:image" content="" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content={url.split("//")[1] ?? ""} />
    <meta property="twitter:url" content={url} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={summary} />
    <meta name="twitter:image" content="" /> -->
  </head>
  <body>
    <main>
      <Section>
        <header class="flex flex-col md:flex-row-reverse items-center gap-2">
          <div class="min-w-100 rounded-sm">
            <img class="object-cover" src={basic.image} />
          </div>
          <div>
            <h1 class="text-4xl mb-3">{basic.name}</h1>
            <h2 class="text-xl font-semibold opacity-80">{basic.label}</h2>
            <span class="flex items-center gap-1 text-opacity-80">
              <WorldMap />
              {location.address}
              {location.city}
              {location.countryCode}
            </span>
            <ul class="flex flex-row list-none">
              <li>
                {basic.phone}
              </li>
              <li>
                {basic.email}
              </li>
              {profiles ? profiles.map((p) => <li>{p.network}</li>) : ""}
            </ul>
          </div>
        </header>
      </Section>
      <Section title="Sobre mí">
        <p>{basic.summary}</p>
      </Section>
      <Section title="Experiencia Laboral">
        <Works userId={user} />
      </Section>
      <Section title="Educación" />
      <Section title="Proyectos" />
      <Section title="Habilidades" />
    </main>
  </body>
</html>

<style is:global>
  html {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      "Courier New",
      Courier,
      monospace;
    background: #fff;
    letter-spacing: -0.025rem;
  }

  main {
    padding: 4rem;
    margin: auto;
    width: 100%;
  }

  @media (width <= 700px) {
    main {
      padding: 2rem;
    }
  }
  body,
  figure {
    margin: 0;
    padding: 0;
  }

  a {
    text-decoration: none;
  }

  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  h1,
  h2,
  h3,
  h4 {
    margin: 0;
    font-family:
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      "Open Sans",
      "Helvetica Neue",
      sans-serif;
  }

  p {
    color: #666;
    font-size: 0.9rem;
    line-height: 1.5;
    margin: 0;
    text-wrap: pretty;
  }

  .print {
    display: none !important;
  }

  @media print {
    .no-print {
      display: none !important;
    }

    .print {
      display: block !important;
    }

    astro-dev-toolbar {
      display: none !important;
    }

    article {
      break-inside: avoid;
    }
  }
</style>
